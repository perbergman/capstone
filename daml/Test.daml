module Test where

import Main
import Daml.Script

data TestParties = TestParties with
  alice : Party
  bob : Party

setupParties: Script TestParties
setupParties = do
  alice <- allocateParty "Alice"
  bob <- allocateParty "Bob"
  return $ TestParties with alice = alice; bob = bob    

happyPath : Script ()
happyPath = do
    testParties@TestParties{alice, bob} <- setupParties

    asset1 <- submit alice do
        createCmd AssetT with
            issuer = alice
            owner = alice
            id = 1
            values = Values with totalGas = 100.0; totalWater = 100.0
            price = 100.0
            description = None
            observers = [bob]
    
    transfer1 <- submit alice do
        exerciseCmd asset1 (Asset_Transfer with price = 100.0, nextOwner = bob)
    
    accept1 <- submit bob do
        exerciseCmd transfer1 AssetTransfer_Accept
    
    submit bob do
        exerciseCmd accept1 (Asset_Split with splitAt = 0.6)
    
    return ()


unhappyPath1 : Script ()
unhappyPath1 = do
    testParties@TestParties{alice, bob} <- setupParties

    asset2 <- submitMustFail alice do
        createCmd AssetT with
            issuer = alice
            owner = alice
            id = 1
            values = Values with totalGas = 1.0; totalWater = 0.0
            price = 100.0
            description = None
            observers = [bob]

    return ()

unhappyPath2 : Script ()    
unhappyPath2 = do
    testParties@TestParties{alice, bob} <- setupParties
    asset2 <- submitMustFail alice do
        createCmd AssetT with
            issuer = alice
            owner = alice
            id = 1
            values = Values with totalGas = 1.0; totalWater = 1.0
            price = -100.0
            description = None
            observers = [bob]
    return ()

unhappyPath3 : Script ()    
unhappyPath3 = do
    testParties@TestParties{alice, bob} <- setupParties    
    asset3 <- submit alice do
        createCmd AssetT with
            issuer = alice
            owner = alice
            id = 4
            values = Values with totalGas = 100.0; totalWater = 100.0
            price = 100.0
            description = None
            observers = [bob]

    arch1 <- submitMustFail bob do
        exerciseCmd asset3 (Archives)

    return ()
